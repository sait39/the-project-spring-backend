# build
# - context: tells where to build db
# - dockerfile: uses the dockerfile to build the image
# env_file
# - PROBABLY just provides the secrets for the image
# ports:
# - tells which port of the image is going to be bound
#   the host
# healthcheck:
# - checks if a image is healthy by using the provided test
#   in the given interval and with the given retries
# - pg_isready is a PostgreSQL utility checks if its server is
#   ready to accept connections, uses given user for the check
# volumes:
# - the upper db-data:/var/... binds the named volume db-data to the directory
# - db-data is a named volume - defined at the bottom

services:
  db:
    build:
      context: .
      dockerfile: docker/db.Dockerfile
    volumes:
      - db-data:/var/lib/postgresql/data  # Named volume for database files
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5

  app:
    build:
      context: .
      dockerfile: docker/app.Dockerfile
    depends_on:
      - db
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}

volumes:
  db-data:
